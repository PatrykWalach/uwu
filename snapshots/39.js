;function id (id) {return id};const unit=undefined;function op1/*+*/ (a) {return b=>a+b};function op2/*/*/ (a) {return b=>Math.floor(a/b)};function op3/***/ (a) {return b=>a*b};function op4/****/ (a) {return b=>a**b};function op5/*-*/ (a) {return b=>a-b};function op6/*<*/ (a) {return b=>a<b};function op7/*>*/ (a) {return b=>a>b};function op8/*>=*/ (a) {return b=>a>=b};function op9/*<=*/ (a) {return b=>a<=b};function op10/*+.*/ (a) {return b=>a+b};function op11/*/.*/ (a) {return b=>a/b};function op12/**.*/ (a) {return b=>a*b};function op13/***.*/ (a) {return b=>a**b};function op14/*-.*/ (a) {return b=>a-b};function op15/*<.*/ (a) {return b=>a<b};function op16/*>.*/ (a) {return b=>a>b};function op17/*>=.*/ (a) {return b=>a>=b};function op18/*<=.*/ (a) {return b=>a<=b};function op19/*<>*/ (a) {return b=>a+b};function op20/*=~*/ (a) {return b=>b.test(a)};function op21/*==*/ (a) {return b=>Object.is(a,b)};function op22/*!=*/ (a) {return b=>!Object.is(a,b)};function op23/*++*/ (a) {return b=>a.concat(b)};function op24/*&&*/ (a) {return b=>a&&b};function op25/*and*/ (a) {return b=>a&&b};function op26/*||*/ (a) {return b=>a||b};function op27/*or*/ (a) {return b=>a||b};;function get (value) {return {VALUE:value}};function value (a) {return a.VALUE};const val=value(get(12.0));console.log(val)